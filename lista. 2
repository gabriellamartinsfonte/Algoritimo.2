#include <stdio.h>

int triangulo(int a, int b, int c) {
    if (a + b > c && a + c > b && b + c > a) {
        return 1;
    } else {
        return 0;
    }
}

int equilatero(int a, int b, int c) {
    if (a == b && b == c) {
        return 1;
    } else {
        return 0;
    }
}

int isosceles(int a, int b, int c) {
    if(a == b || b == c || a == c) {
        return 1;
    } else {
        return 0;
    }
}

int escaleno(int a, int b, int c) {
    if (a != b && b != c && a != c) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    int a, b, c;

  printf("Coloque três lados de um triângulo: ");
    scanf("%d %d %d", &a, &b, &c);

    if (triangulo(a, b, c)) {
        if (equilatero(a, b, c)) {
            printf("O triângulo é equilátero.\n");
        } else if (isosceles(a, b, c)) {
            printf("O triângulo é isósceles.\n");
        } else if (escaleno(a, b, c)) {
            printf("O triângulo é escaleno.\n");
        }
    } else {
        printf("Os três lados não formam um triângulo.\n");
    }
    return 0;
}


--------------------------------------------------------------------
2 
#include <stdio.h>

int calcularMMC(int num1, int num2) {
    int maior;


    if (num1 > num2)
        maior = num1;
    else
        maior = num2;

    while (1) {
        if (maior % num1 == 0 && maior % num2 == 0)
            return maior;
        maior++;
    }
}

int main() {
    int num1, num2;

    printf("Digite o primeiro número: ");
    scanf("%d", &num1);
    printf("Digite o segundo número: ");
    scanf("%d", &num2);

    int mmc = calcularMMC(num1, num2);

    printf("O MMC de %d e %d é: %d\n", num1, num2, mmc);

    return 0;
}
-----------------------------------------------------------------------
3
#include <stdio.h>

// Função para verificar se um número é primo
int primo(int num) {
    if (num <= 1) return 0; // Números menores ou iguais a 1 não são primos

    for (int i = 2; i <= num / 2; i++) {
        if (num % i == 0) return 0; // Se o número é divisível por algum número entre 2 e num/2, não é primo
    }

    return 1; // Se o loop termina sem encontrar divisores, o número é primo
}

// Função para calcular a soma dos N primeiros números primos
int somaPrimos(int N) {
    int soma = 0;
    int num = 2; // Começamos a busca pelos números primos a partir de 2
    int count = 0; // Contador de números primos encontrados

    while (count < N) {
        if (primo(num)) {
            soma += num;
            count++;
        }
        num++;
    }

    return soma;
}

int main() {
    int N;

    printf("Digite o valor de N: ");
    scanf("%d", &N);

    int soma = somaPrimos(N);

    printf("A soma dos primeiros %d números primos é: %d\n", N, soma);

    return 0;
}
-----------------------------------------------------------
4
#include <stdio.h>

// Função para calcular a média da turma
float mediaTurma(int num_alunos) {
    int i, nota;
    float soma = 0;

    printf("Digite as notas dos alunos:\n");
    for (i = 0; i < num_alunos; i++) {
        printf("Nota do aluno %d: ", i + 1);
        scanf("%d", &nota);
        soma += nota;
    }

    return soma / num_alunos;
}

// Função para calcular a média da escola
float mediaEscola(int num_turmas) {
    int i, num_alunos;
    float soma = 0;

    printf("\n");
    for (i = 0; i < num_turmas; i++) {
        printf("Digite o número de alunos da turma %d: ", i + 1);
        scanf("%d", &num_alunos);
        soma += mediaTurma(num_alunos);
    }

    return soma / num_turmas;
}

int main() {
    int num_turmas;

    printf("Digite o número de turmas: ");
    scanf("%d", &num_turmas);

    float media_geral = mediaEscola(num_turmas);

    printf("\nA média geral da escola é: %.2f\n", media_geral);

    return 0;
}

------------------------------------------------------------
5
#include <stdio.h>

int Fibonacci(int n) {
    if (n <= 0) return -1; // Retornar -1 se n for inválido

    int a = 0, b = 1, c, i;

    if (n == 1) return a; // Retornar o primeiro termo (0) se n for igual a 1
    else if (n == 2) return b; // Retornar o segundo termo (1) se n for igual a 2

    for (i = 3; i <= n; i++) {
        c = a + b;
        a = b;
        b = c;
    }

    return c;
}

int main() {
    int n;

    printf("Digite o valor de n para calcular o termo da série de Fibonacci: ");
    scanf("%d", &n);

    int termo = Fibonacci(n);

    if (termo == -1)
        printf("Por favor, insira um valor válido para n (n > 0).\n");
    else
        printf("O %dº termo da série de Fibonacci é: %d\n", n, termo);

    return 0;
}
----------------------------------------------------------
6













------------------------------------
7
#include <stdio.h>


void rotacao(int *num1, int *num2, int *num3) {
    int temp = *num1;
    *num1 = *num2;
    *num2 = *num3;
    *num3 = temp;
}

int main() {
    int num1, num2, num3;

    printf("Digite três números para a rotação: ");
    scanf("%d %d %d", &num1, &num2, &num3);

  
    printf("Números antes da rotação: %d, %d, %d\n", num1, num2, num3);

    rotacao(&num1, &num2, &num3);

  
    printf("Números depois da rotação: %d, %d, %d\n", num1, num2, num3);

    return 0;
}
----------------------------------------------------------------
8
#include <stdio.h>

#define SIZE 5

void primeiroTriangulo(int matriz[SIZE][SIZE]) {
    printf("Primeiro Triângulo:\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j <= i; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

void segundoTriangulo(int matriz[SIZE][SIZE]) {
    printf("\nSegundo Triângulo:\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = SIZE - 1; j >= i; j--) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

void terceiroTriangulo(int matriz[SIZE][SIZE]) {
    printf("\nTerceiro Triângulo:\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < i; j++) {
            printf("  "); // Espaços para formatar o triângulo
        }
        for (int j = i; j < SIZE; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}


void quartoTriangulo(int matriz[SIZE][SIZE]) {
    printf("\nQuarto Triângulo:\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE - i - 1; j++) {
            printf("  "); // Espaços para formatar o triângulo
        }
        for (int j = SIZE - i - 1; j < SIZE; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int matriz[SIZE][SIZE] = {
        {1, 2, 3, 4, 5},
        {6, 7, 8, 9, 10},
        {11, 12, 13, 14, 15},
        {16, 17, 18, 19, 20},
        {21, 22, 23, 24, 25}
    };

  
    primeiroTriangulo(matriz);
    segundoTriangulo(matriz);
    terceiroTriangulo(matriz);
    quartoTriangulo(matriz);

    return 0;
}
-------------------------------------------
9
#include <stdio.h>

int menorEntreTres(int num1, int num2, int num3) {
    int menor = num1;

    if (num2 < menor)
        menor = num2;
    if (num3 < menor)
        menor = num3;

    return menor;
}

int main() {
    int num1, num2, num3;

    printf("Digite três números separados por espaços: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    int menor = menorEntreTres(num1, num2, num3);

    printf("O menor dos três números é: %d\n", menor);

    return 0;
}
------------------------------------------------

10
#include <stdio.h>

int maiorEntreTres(int num1, int num2, int num3) {
    int maior = num1;

    if (num2 > maior)
        maior = num2;
    if (num3 > maior)
        maior = num3;

    return maior;
}

int main() {
    int num1, num2, num3;

  
    printf("Digite três números separados por espaços: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    int maior = maiorEntreTres(num1, num2, num3);

    printf("O maior dos três números é: %d\n", maior);

    return 0;
}

----------------------------------------------------------------------
11
#include <stdio.h>

int maximo(int num1, int num2, int num3, int *menor) {
    int maior = num1;

    if (num2 > maior)
        maior = num2;
    if (num3 > maior)
        maior = num3;

   
    *menor = num1;
    if (num2 < *menor)
        *menor = num2;
    if (num3 < *menor)
        *menor = num3;

    return maior;
}

int main() {
    int num1, num2, num3, menor;

    printf("Digite três números separados por espaços: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    int maior = maximo(num1, num2, num3, &menor);

    printf("O maior dos três números é: %d\n", maior);
    printf("O menor dos três números é: %d\n", menor);

    return 0;
}
-----------------------------------------------------------

12
#include <stdio.h>


int soma(int num1, int num2);

int main() {
    int num1, num2;

    // Solicitar ao usuário que insira dois números inteiros
    printf("Digite o primeiro número inteiro: ");
    scanf("%d", &num1);
    printf("Digite o segundo número inteiro: ");
    scanf("%d", &num2);

    // Chamar a função para calcular a soma
    int resultado = soma(num1, num2);

    // Exibir o resultado da soma
    printf("A soma de %d e %d é: %d\n", num1, num2, resultado);

    return 0;
}

int soma(int num1, int num2) {
    return num1 + num2;
}
--------------------------------------------------------------
13
#include <stdio.h>

int maior(int num1, int num2);

int main() {
    int num1, num2;

    printf("Digite o primeiro número inteiro: ");
    scanf("%d", &num1);
    printf("Digite o segundo número inteiro: ");
    scanf("%d", &num2);

    int maior_numero = maior(num1, num2);

    printf("O maior número entre %d e %d é: %d\n", num1, num2, maior_numero);

    return 0;
}

int maior(int num1, int num2) {
    if (num1 > num2)
        return num1;
    else
        return num2;
}
------------------------------------------------------------------------------

14
#include <stdio.h>


int maiorNoVetor(int vetor[], int tamanho);

int main() {
    int numeros[3];
    int i;

    printf("Digite três números inteiros:\n");
    for (i = 0; i < 3; i++) {
        printf("Número %d: ", i + 1);
        scanf("%d", &numeros[i]);
    }
    
    int maior_numero = maiorNoVetor(numeros, 3);

    printf("O maior número é: %d\n", maior_numero);

    return 0;
}

int maiorNoVetor(int vetor[], int tamanho) {
    int max = vetor[0];
    int i;

    for (i = 1; i < tamanho; i++) {
        if (vetor[i] > max) {
            max = vetor[i];
        }
    }

    return max;
}
-------------------------------------------------------------------------------
15
